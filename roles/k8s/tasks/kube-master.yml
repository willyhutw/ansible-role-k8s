---

- name: Kube Master | Check if kube-apiserver.yaml exist
  stat:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
  register: kube_apiserver

- name: Kube Master | Run kubeadm init
  shell: |
    kubeadm init \
     --control-plane-endpoint={{ inventory_hostname }} \
     --apiserver-advertise-address={{ inventory_hostname }} \
     --pod-network-cidr={{ KUBE_POD_CIDR }}
  register: kubeadm_init
  when: not kube_apiserver.stat.exists

- name: Kube Master | Generate join command
  shell: kubeadm token create --print-join-command
  register: join_command
  when: not kube_apiserver.stat.exists

- name: Kube Master | Copy token file to /vagrant_data
  copy:
    content: "{{ join_command.stdout }}"
    dest: "{{ KUBE_JOIN_CMD_PATH }}"
  when: not kube_apiserver.stat.exists

- name: debug
  debug:
    msg:
      - "{{ kubeadm_init.stdout }}"
  when: not kube_apiserver.stat.exists

- name: Kube Master | Create .kube directory
  file:
    path: "{{ lookup('env','HOME') }}/.kube"
    state: directory
  become_user: "{{ lookup('env','USER') }}"

- name: Kube Master | Copy config file
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ lookup('env','HOME') }}/.kube/config"
    remote_src: yes
    owner: "{{ lookup('env','USER') }}"
    group: "{{ lookup('env','USER') }}"

- name: Kube Master | Install pod network add-on
  shell: kubectl apply -f {{ KUBE_POD_NETWORK }}
  become_user: "{{ lookup('env','USER') }}"
  when: not kube_apiserver.stat.exists


